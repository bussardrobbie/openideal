<?php

/**
 * @file
 * Contains main functionality/hooks for openideal_rest module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\openideal_rest\WebhooksFormProcessor;

/**
 * Implements hook_webhooks_event_info_alter().
 */
function openideal_rest_webhooks_event_info_alter(&$options) {
  $options = [];

  /** @var \Drupal\message\Entity\MessageTemplate[] $message_templates */
  $message_templates = \Drupal::entityTypeManager()->getStorage('message_template')->loadMultiple();

  foreach ($message_templates as $message) {
    $options[$message->id()] = [
      'type' => $message->label(),
      'event' => $message->id(),
    ];
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function openideal_rest_form_webhooks_settings_alter(&$form, FormStateInterface $form_state) {
  \Drupal::classResolver(WebhooksFormProcessor::class)
    ->alter($form, $form_state);
}

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 *
 * Adds additional "plugin" field into the webhook form.
 */
function openideal_rest_form_webhook_config_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $entity = $form_state->getFormObject()->getEntity();

  if (isset($form['label'])) {
    $form['label']['#weight'] = -3;
  }

  if ($form['type']) {
    $form['type']['#weight'] = -2;
  }

  $plugins = \Drupal::configFactory()->get('webhooks.settings')->get('plugins');

  $form['plugin_type'] = [
    '#type' => 'select',
    '#required' => TRUE,
    '#title' => t('Type of webhook'),
    '#options' => $plugins,
    // @todo User can delete slack, so need to make check or remove ability to delete it.
    '#default_value' => $entity->getThirdPartySettings('openideal_rest', 'plugin') ?? 'slack',
    '#weight' => -1,
    '#states' => [
      // We don't support plugins for other then outgoing webhooks.
      'visible' => [
        ':input[name="type"]' => ['value' => 'outgoing'],
      ],
    ],
  ];

  $form['actions']['submit']['#submit'][] = '_openideal_rest_webhook_config_submit';
}

/**
 * Submit handler.
 *
 * Add "plugin" third party setting for outgoing webhooks.
 *
 * @param array $form
 *   Form.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   Form state.
 */
function _openideal_rest_webhook_config_submit(array $form, FormStateInterface $form_state) {
  if ($form_state->getValue('type') != 'outgoing') {
    return;
  }

  $webconfig = $form_state->getFormObject()->getEntity();

  $webconfig->setThirdPartySetting('openideal_rest', 'plugin', $form_state->getValue('plugin_type'));
  $webconfig->save();
}
