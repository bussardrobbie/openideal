<?php

/**
 * @file
 * Install, update and uninstall functions for the idea install profile.
 */

use Drupal\user\Entity\User;
use Symfony\Component\HttpFoundation\Request;

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 *
 * @see system_install()
 */
function idea_install() {
  // Assign user 1 the "administrator" role.
  // @see standard_install().
  $user = User::load(1);
  $user->roles[] = 'administrator';
  $user->save();

  // Install 'openideal_content' module.
  \Drupal::service('module_installer')->install(['openideal_content']);

  // Force set the administerusersbyrole configuration in fact
  // the module change it during installation of profile.
  // @Todo: Further investigation.
  \Drupal::configFactory()->getEditable('administerusersbyrole.settings')->set('roles', ['manager' => 'safe'])->save();

  // To avoid issues with importing of configurations set system.site
  // config programmatically.
  \Drupal::configFactory()->getEditable('system.site')
    ->set('name', 'OpenideaL')
    ->set('slogan', 'Ideas, challenges, news')
    ->set('page', ['front' => '/home'])
    ->save();

  drupal_register_shutdown_function('_rebuild_cache');
}

/**
 * Force rebuild all Drupal's caches.
 *
 * We should rebuild Drupal cache because rules module after the
 * reaction rule is saved, need to rebuild the container,
 * otherwise the reaction rule will not fire. However, during Drupal
 * installation if there are new registered Rules events Drupal container
 * is not rebuilt and we need to force rebuild it.
 */
function _rebuild_cache() {
  if (file_exists(DRUPAL_ROOT . '/autoload.php')
    && file_exists(DRUPAL_ROOT . '/core/includes/utility.inc')
  ) {
    $loader = require DRUPAL_ROOT . '/autoload.php';
    include_once DRUPAL_ROOT . '/core/includes/utility.inc';
  }
  else {
    return;
  }

  $request = Request::createFromGlobals();

  // Clear user cache for all major platforms.
  $user_caches = [
    'apcu_clear_cache',
    'wincache_ucache_clear',
    'xcache_clear_cache',
  ];
  array_map('call_user_func', array_filter($user_caches, 'is_callable'));

  drupal_rebuild($loader, $request);
}
